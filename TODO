ENHANCEMENTS
============
Use the non-js lightbox to display products since our tabs now load content from the same page. Future refactoring.
Refactor info divs on sign-up and product_groups template to use #msger. The difference between info and msg is that message will slide up but info will remain.
When the user receives info that he has added items to his quote, he should be able to click the message and the names and quantity of the items should be displayed asynchronously.
We can make #msger's background-color dark and fontcolor white.
use generic views
It won't be a bad idea to have eqsupply's exceptions e.g CannotBeZero - in the case of specifying 0 as quantity when adding quoteitem. 
Would be on the lookout for more neccessities. For now, let's raise return an error json_response. We need to always fail immediately, noisily and helplessly.
Product listing: products.html, quote_preview.html. Implement inheritance.
Refactoring json_response: Will there ever be a time when we would need to use 500, Internal Server Error, It's needed for server exceptions e.g server issues, code error et al.




FINISHINGS
==========
Use login_required decorator. Check for other useful decorators.
Remember to always use todict() wherever necessary.
Write all tests. Models, views and javascript.
Always raise Http404 meaningfully.
Pricing patch.

-Move all funny looking routes into their proper place, we need to create a products app.
-When a user signs up, normally, the insertion happens before activation email is sent. Then the user retries and there's a duplicate entry error because the record has been inserted once, how can we handle this situation? Maybe #msger should not slideUp if there's such an error. We can just give an info to the user to check his internet connection and retry(this would be a link to send just the email).
-Why don't we display the activation feedback as a django flash object on the login page? Just like "Create quote", activation is too small an operation to occupy one page. Same with logout, it should be redirected to the login page with a django flash message.
-Solution to incorrect messages in login and signup: After each error message is displayed, msger should be html'ed with <p>Loading...</p>
-We might also want to make #msger display page-customized messages.e.g When a user click "Process Quote", #msger should display "Processing Quote, Please Wait..." instead of "Loading...".

Next to-dos: 
- Preview button should check the following in this order:
* Whether the quote is empty - if empty, prompt user to add item, else:
* Check for user details - if yes, redirect to quote preview, else show the user-detail lightbox.

Since quote_preview already checks if quote is empty,
* Let's attempt a preview,
* If we get an error
